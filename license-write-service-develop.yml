server:
  port: ${CUSTOM.SERVER.PORT:9002}

spring:
 jpa:
    database: POSTGRESQL
    show-sql: false
    hibernate:
      ddl-auto: update
 sql:
    init:
      mode: ALWAYS
      continue-on-error: true
 datasource:
    url: jdbc:postgresql://localhost:5432/licenses
    username: postgres
    password: postgres
    driverClassName: org.postgresql.Driver
 security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/auth/realms/SpringBootKeycloak
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
 kafka:
    bootstrap-servers: localhost:9092
    producer:    
      retries: 3
      acks: all
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

### Eureka Client configuration
eureka:
  instance:
    preferIpAddress: true
    lease-expiration-duration-in-seconds: 30
  client:
    serviceUrl:
      defaultZone: ${EUREKA.HOST.SERVER:http://localhost:8761/eureka}
    registerWithEureka: true
    fetchRegistry: true
    healthcheck:
      enabled: true
    refresh:
      enable: true

springdoc:
  packagesToScan: com.mitocode.licensewriteservice.api.controllers
  swagger-ui:
   enabled: true

### Actuator info (/actuator/info)
info:
  app:
    name: License Service Microservice
    description: Microservicio para gestion de licencias
    version: 1.0

management:
  endpoints:
    web:
      exposure:
        include: '*'
      base-path: /actuator
  info:
    env:
      enabled: true
      
app:
  kafka:
    producer:
      licencia-created-topic: licenciaCreated
      licencia-deleted-topic: licenciaDeleted
      audit-created-topic: auditCreated
