server:
  port: ${CUSTOM_SERVER_PORT:9002}

spring:
 jpa:
    database: ${SPRING_DATABASE_PROVIDER}
    show-sql: false
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
    defer-datasource-initialization: true
 sql:
    init:
      mode: ALWAYS
      continue-on-error: true
 datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driverClassName: ${SPRING_DATASOURCE_DRIVERCLASSNAME}
 security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${OAUTH2_ISSUER_URI}
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
 kafka:
    bootstrap-servers: ${KAFKA_BOOSTRAP_SERVER}
    producer:
      retries: 3
      acks: all
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

### Eureka Client configuration
eureka:
  instance:
    preferIpAddress: true
    lease-expiration-duration-in-seconds: 30
  client:
    serviceUrl:
      defaultZone: ${EUREKA_HOST_SERVER}
    registerWithEureka: true
    fetchRegistry: true
    healthcheck:
      enabled: true
    refresh:
      enable: true

springdoc:
  packagesToScan: com.mitocode.licensewriteservice.api.controllers
  swagger-ui:
   enabled: true

### Actuator info (/actuator/info)
info:
  app:
    name: License Service Microservice
    description: Microservicio para gestion de licencias
    version: 1.0

management:
  endpoints:
    web:
      exposure:
        include: '*'
      base-path: /actuator
  info:
    env:
      enabled: true
      
app:
  kafka:
    producer:
      licencia-created-topic: licenciaCreated
      licencia-deleted-topic: licenciaDeleted
      audit-created-topic: auditCreated
