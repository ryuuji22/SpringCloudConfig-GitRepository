server:
  port: ${CUSTOM_SERVER_PORT:9003}

### Eureka Client configuration
eureka:
  instance:
    preferIpAddress: true
    lease-expiration-duration-in-seconds: 30
  client:
    serviceUrl:
      defaultZone: ${EUREKA_HOST_SERVER}
    registerWithEureka: true
    fetchRegistry: true
    healthcheck:
      enabled: true
    refresh:
      enable: true

### Actuator info (/actuator/info)
info:
  app:
    name: License Read Service Microservice
    description: Microservicio para consulta de licencias
    version: 1.0

management:
  endpoints:
    web:
      exposure:
        include: '*'
      base-path: /actuator
  info:
    env:
      enabled: true

springdoc:
  packagesToScan: com.mitocode.licensereadservice.api.controllers
  swagger-ui:
   enabled: true

### Mongo database configuration
spring:
  data:
    mongodb:
      host: ${SPRING_DATASOURCE_HOST}
      port: ${SPRING_DATASOURCE_PORT}
      database: ${SPRING_DATASOURCE_DATABASE}
      username: ${SPRING_DATASOURCE_USERNAME}
      password: ${SPRING_DATASOURCE_PASSWORD}
      authentication-database: ${SPRING_DATASOURCE_AUTHENTICATION_DATABASE}
  
  kafka:
    bootstrap-servers: ${KAFKA_BOOSTRAP_SERVER}
    consumer:
      group-id: default
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring.json.trusted.packages: '*'
 
app:
  kafka:
    consumer:
      licencia-created-topic: licenciaCreated
      licencia-deleted-topic: licenciaDeleted
